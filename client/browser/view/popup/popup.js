// Generated by CoffeeScript 1.10.0
(function() {
  var Popup,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.o.ViewPopup = Popup = (function(superClass) {
    extend(Popup, superClass);

    Popup.prototype.className = 'popup';

    Popup.prototype.template = "<div>\n   <% if (!('close' in self.options) || self.options.close){ %>\n    <button data-action='close' class='popup-close'>Ã—</button>\n   <% } %>\n   <% if (self.options.head) { %>\n    <h1><%= typeof self.options.head === 'function' ? self.options.head({'self': self}) : self.options.head %></h1>\n   <% } %>\n   <%= typeof self.options.body === 'function' ? self.options.body({'self': self}) : self.options.body %>\n</div>";

    Popup.prototype.events = {
      'click button[data-action="close"]': function() {
        return this.remove();
      },
      'click [data-click]': function(e) {
        return this.trigger($(e.target).attr('data-click'), $(e.target).attr('data-click-attr'));
      }
    };

    function Popup() {
      Popup.__super__.constructor.apply(this, arguments);
      if (this.options.parent) {
        this.$el.appendTo(this.options.parent);
      }
      this;
    }

    Popup.prototype.render = function() {
      Popup.__super__.render.apply(this, arguments);
      this.$container = $(this.$('div')[0]);
      return this;
    };

    return Popup;

  })(window.o.View);

}).call(this);
