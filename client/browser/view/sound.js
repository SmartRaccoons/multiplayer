// Generated by CoffeeScript 2.3.2
(function() {
  var Sound, __enable, cordova;

  cordova = function() {
    return !!window.cordova;
  };

  __enable = true;

  this.o.Sound = Sound = (function() {
    class Sound {
      constructor(options) {
        var fn;
        this.options = options;
        this._media_last = null;
        this.__muted = Cookies ? !!parseInt(Cookies.get('__sound_muted')) : false;
        fn = () => {
          this.__enable = true;
          document.body.removeEventListener('click', fn);
          return document.body.removeEventListener('touchstart', fn);
        };
        document.body.addEventListener('click', fn);
        document.body.addEventListener('touchstart', fn);
      }

      play(sound) {
        if (!__enable) {
          return;
        }
        if (!this.__enable) {
          return;
        }
        if (this.__muted) {
          return;
        }
        try {
          if (cordova()) {
            if (this._media_last) {
              this._media_last.release();
            }
            this._media_last = new Media(`${this.options.path}${sound}.wav`);
            this._media_last.setVolume(`${this._volume}`);
            return this._media_last.play({
              playAudioWhenScreenIsLocked: false
            });
          } else {
            this._media_last = new Audio(`${this.options.path}${sound}.wav`);
            this._media_last.volume = this._volume;
            return this._media_last.play();
          }
        } catch (error) {

        }
      }

      is_enable() {
        return __enable;
      }

      disable() {
        return __enable = false;
      }

      stop() {
        if (!this._media_last) {
          return;
        }
        if (cordova()) {
          return this._media_last.setVolume('0');
        } else {
          return this._media_last.volume = 0;
        }
      }

      is_mute() {
        return this.__muted;
      }

      mute(__muted) {
        this.__muted = __muted;
        this.stop();
        if (Cookies) {
          return Cookies.set('__sound_muted', this.__muted ? 1 : 0);
        }
      }

    };

    Sound.prototype._volume = 0.3;

    return Sound;

  }).call(this);

}).call(this);
