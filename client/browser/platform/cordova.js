// Generated by CoffeeScript 2.5.1
(function() {
  var Cordova, PopupCode;

  PopupCode = window.o.PlatformOffline.prototype.PopupCode;

  window.o.PlatformCordova = Cordova = (function() {
    var PopupCodeCordova;

    class Cordova extends window.o.PlatformOffline {
      _version_error() {
        return this.router.message({
          body: _l('Authorize.version error cordova'),
          actions: [
            {
              event: 'open',
              stay: true,
              body: _l('Authorize.button.open')
            }
          ]
        }).bind('open', () => {
          return window.open(App.config[this.options.platform].market, '_system');
        });
      }

      success_login() {
        super.success_login(...arguments);
        if (window.SafariViewController) {
          return window.SafariViewController.hide();
        }
      }

    };

    Cordova.prototype.PopupCode = PopupCodeCordova = (function() {
      class PopupCodeCordova extends PopupCode {};

      PopupCodeCordova.prototype.events = Object.assign({}, PopupCode.prototype.events, {
        'click [data-authorize]': function(e) {
          if (window.SafariViewController) {
            return window.SafariViewController.isAvailable((available) => {
              var url;
              if (!available) {
                return;
              }
              e.preventDefault();
              url = $(e.target).attr('href');
              return window.SafariViewController.show({url});
            });
          }
        }
      });

      return PopupCodeCordova;

    }).call(this);

    Cordova.prototype._name = 'cordova';

    return Cordova;

  }).call(this);

}).call(this);
