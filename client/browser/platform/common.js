// Generated by CoffeeScript 2.5.1
(function() {
  var Common;

  window.o.PlatformCommon = Common = class Common {
    constructor(options) {
      this.options = options;
      this.router = new window.o.Router(this.options.router);
      this.router.$el.appendTo('body');
    }

    language_check(callback) {
      if (!window._locales_default) {
        return callback();
      }
      return this.router.subview_append(new window.o.ViewPopupLanguage()).bind('language', (language) => {
        return App.lang = language;
      }).bind('remove', () => {
        return callback();
      }).render().$el.appendTo(this.router.$el);
    }

    connect(params) {
      return window.o.Connector(Object.assign({
        router: this.router,
        address: App.config.server,
        version: App.version,
        version_callback: () => {
          return this.router.message({
            body: _l('Authorize.version error'),
            actions: [
              {
                'reload': _l('Authorize.button.reload')
              }
            ]
          });
        }
      }, params));
    }

    buy(params) {
      return this.router.send(`buy:${this._name}`, Object.assign({
        language: App.lang
      }, params));
    }

    auth_send(p) {
      this.router.message(_l('Authorize.Authorizing'));
      return this.router.send('authenticate:try', p);
    }

  };

}).call(this);
