// Generated by CoffeeScript 2.7.0
(function() {
  var Popup, PopupAuthorizeEmail, PopupAuthorizeEmailForget, PopupEmail;

  Popup = window.o.ViewPopup;

  PopupEmail = (function() {
    class PopupEmail extends Popup {
      render() {
        super.render(...arguments);
        this.$email = this.$('input[name=email]');
        this.$email.focus();
        return this;
      }

    };

    PopupEmail.prototype.className = Popup.prototype.className + '-authorize-email';

    return PopupEmail;

  }).call(this);

  PopupAuthorizeEmailForget = (function() {
    class PopupAuthorizeEmailForget extends PopupEmail {};

    PopupAuthorizeEmailForget.prototype.options_default = {
      close: true,
      body: _.template(`<form>
  <input required name="email" placeholder="<%= _l('Authorize.email.email') %>" maxlength='64' type="email" value='<%= self.options.email || '' %>' />
  <div class='&-buttons'>
    <button><%= _l('Authorize.email.forget') %></button>
  </div>
</form>`)
    };

    PopupAuthorizeEmailForget.prototype.events = Object.assign({}, Popup.prototype.events, {
      'submit form': function(e) {
        e.preventDefault();
        this.trigger('forget', {
          email: this.$email.val()
        });
        return this.remove();
      }
    });

    return PopupAuthorizeEmailForget;

  }).call(this);

  PopupAuthorizeEmail = (function() {
    class PopupAuthorizeEmail extends PopupEmail {};

    PopupAuthorizeEmail.prototype.options_default = {
      close: true,
      body: _.template(`<form>
  <input required name="email" placeholder="<%= _l('Authorize.email.email') %>" maxlength='64' type="email" /><br />
  <input required name="password" placeholder="<%= _l('Authorize.email.pass') %>" type="password" /><br />
  <div class='&-buttons'>
    <button><%= _l('Authorize.email.login') %></button>
    <span data-forget><%= _l('Authorize.email.forget') %></span>
  </div>
</form>`)
    };

    PopupAuthorizeEmail.prototype.events = Object.assign({}, Popup.prototype.events, {
      'submit form': function(e) {
        e.preventDefault();
        return this.trigger('authorize', {
          email: [this.$email.val(), this.$('input[name=password]').val()]
        });
      },
      'click [data-forget]': function() {
        return this.subview_append(new PopupAuthorizeEmailForget({
          parent: this.options.parent,
          email: this.$('input[name=email]').val()
        }), ['forget']).render();
      }
    });

    return PopupAuthorizeEmail;

  }).call(this);

  window.o.PlatformEmail = {
    _auth_email_events: function() {
      var fn;
      if (this._auth_email_events_active) {
        return;
      }
      this._auth_email_events_active = true;
      fn = (event, data) => {
        if (event === 'authenticate:email_forget') {
          this.router.subview_append(new Popup({
            parent: this.router.$el,
            body: data.body
          })).render();
        }
        if (event === 'authenticate:success') {
          return this.router.unbind('request', fn);
        }
      };
      return this.router.bind('request', fn);
    },
    auth_email: function() {
      var authorize;
      this._auth_email_events();
      authorize = this.router.subview_append(new PopupAuthorizeEmail({
        parent: this.router.$el
      }));
      authorize.bind('authorize', (params) => {
        return this.auth_send(params);
      });
      authorize.bind('forget', (params) => {
        return this.router.send('authenticate:email_forget', Object.assign({
          language: App.lang
        }, params));
      });
      authorize.bind('remove', () => {
        return this.auth_popup();
      });
      return authorize.render();
    }
  };

}).call(this);
