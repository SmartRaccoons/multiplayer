// Generated by CoffeeScript 1.10.0
(function() {
  var Router,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.o.Router = Router = (function(superClass) {
    extend(Router, superClass);

    Router.prototype.className = 'container';

    Router.prototype.template = "  ";

    Router.prototype._get = function(param) {
      var i, len, ref, result, v;
      ref = ['search', 'hash'];
      for (i = 0, len = ref.length; i < len; i++) {
        v = ref[i];
        result = window.location[v].match(new RegExp("(\\?|&|#)" + param + "(\\[\\])?=([^&]*)"));
        if (result) {
          return result[3];
        }
      }
      return false;
    };

    function Router() {
      Router.__super__.constructor.apply(this, arguments);
      App.events.trigger('router:init', this);
      this._active = null;
    }

    Router.prototype.connect = function() {
      this._unload();
      this.render();
      return this.trigger('connect');
    };

    Router.prototype.disconnect = function() {
      return this.message(_l('Disconnect'));
    };

    Router.prototype.login_duplicate = function() {
      return this.message(_l('Login duplicate'));
    };

    Router.prototype.connect_failed = function() {
      return this.message(_l('connect failed'));
    };

    Router.prototype.request = function(event, data) {
      this.trigger('request', event, data);
      return this.trigger("request:" + event, data);
    };

    Router.prototype.message_remove = function() {
      if (this._message) {
        this._message.remove();
        return this._message = null;
      }
    };

    Router.prototype.message = function(params) {
      this.message_remove();
      if (typeof params === 'string') {
        params = {
          body: params
        };
      }
      this._message = new window.o.ViewPopup(_.extend({
        parent: this.$el,
        close: false
      }, params)).render();
      this._message.bind('reload', function() {
        return window.location.reload(true);
      });
      return this._message;
    };

    Router.prototype._active_check = function(name) {
      return this._active && this._active._name === name;
    };

    Router.prototype._unload = function() {
      if (this._active) {
        this._active.remove();
        return this._active = null;
      }
    };

    Router.prototype._load = function(view, options) {
      this._unload();
      this._active = new window.o['View' + view.charAt(0).toUpperCase() + view.slice(1)](options);
      this.$el.prepend(this._active.$el);
      this._active.render();
      this._active._name = view;
      return this._active;
    };

    return Router;

  })(window.o.View);

}).call(this);
