// Generated by CoffeeScript 1.10.0
(function() {
  var Analytic, gtag;

  window.dataLayer = window.dataLayer || [];

  gtag = function() {
    return window.dataLayer.push(arguments);
  };

  window.o.Analytic = Analytic = (function() {
    function Analytic() {}

    Analytic.prototype.init = function() {
      $('<script>').attr({
        src: "https://www.googletagmanager.com/gtag/js?id=" + App.config.google_analytics,
        async: true
      }).appendTo(document.body);
      gtag('js', new Date());
      return this.config();
    };

    Analytic.prototype.config = function(params) {
      if (params == null) {
        params = {};
      }
      params['app_name'] = document.title;
      params['page_title'] = document.title;
      params['page_path'] = window.location.pathname;
      return gtag('config', App.config.google_analytics, params);
    };

    Analytic.prototype.screen = function(screen_name) {
      return gtag('event', 'screen_view', {
        screen_name: screen_name + " " + App.lang,
        app_version: App.version,
        app_installer_id: window.location.pathname.split('/')[2] || 'standalone'
      });
    };

    Analytic.prototype.exception = function(description) {
      return gtag('event', 'exception', {
        'description': description,
        'fatal': false
      });
    };

    Analytic.prototype.buy_start = function(params) {
      return gtag('event', 'begin_checkout', {
        'items': [
          {
            'id': params.service,
            'name': App.config.buy[params.service]
          }
        ]
      });
    };

    Analytic.prototype.buy_complete = function(params) {
      return gtag('event', 'purchase', {
        'transaction_id': params.transaction_id,
        'affiliation': params.platform,
        'items': [
          {
            'id': params.service,
            'name': App.config.buy[params.service]
          }
        ]
      });
    };

    return Analytic;

  })();

}).call(this);
